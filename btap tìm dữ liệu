import java.io.IOException;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;

public class ElectricityConsumption {

    // Mapper class
    public static class ElectricityMapper extends Mapper<LongWritable, Text, Text, IntWritable> {
        private Text year = new Text();
        private IntWritable avgConsumption = new IntWritable();

        public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
            String[] fields = value.toString().split("\\s+");
            year.set(fields[0]);
            avgConsumption.set(Integer.parseInt(fields[fields.length - 1]));
            context.write(year, avgConsumption);
        }
    }

    // Reducer class
    public static class ElectricityReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
        private IntWritable result = new IntWritable();

        public void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {
            int sum = 0;
            int count = 0;
            for (IntWritable val : values) {
                sum += val.get();
                count++;
            }
            double average = (double) sum / count;
            if (average > 30) {
                result.set((int) average);
                context.write(key, result);
            }
        }
    }
}
